name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Use ubuntu-latest for a Linux runner

    steps:
    - name: root
      run: sudo su root
    - name: Download ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz -O ngrok.tgz
        tar -xzf ngrok.tgz
      shell: bash

    - name: Auth
      run: ./ngrok authtoken $NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: ssh
      run: |
            pip install colab_ssh
            NGROK_TOKEN=2KLRcs73kmbpIZBqrFoViDNa6LJ_561aTxd9DDP2LYjgnwmww
            sudo echo "from colab_ssh import launch_ssh 
            launch_ssh(NGROK_TOKEN, 'YOUR PASSWORD HERE')" > ssh.py
            python ssh.py
            sudo usermod --password $(echo "P@ssw0rd!" | openssl passwd -1 -stdin) runneradmin


    - name: Enable TS
      run: |
        sudo sysctl -w net.ipv4.ip_forward=1
        sudo iptables -A INPUT -p tcp --dport 3389 -j ACCEPT
        sudo ufw allow 3389/tcp  # If you use UFW (Uncomplicated Firewall)
        sudo service xrdp restart
        sudo echo 'runneradmin:P@ssw0rd!' | sudo chpasswd
        sudo systemctl restart ssh  # Restart SSH service if needed
      shell: bash 
    - name: USER/PASS
      run: echo 'runneradmin:P@ssw0rd!'
    - name: Create Tunnel
      run: ./ngrok tcp 3389
      shell: bash
